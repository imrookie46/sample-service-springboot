# application
#server.port=${PORT:0}
server.port=8094
# application name format: service-(terserahmaudinamainapaasalmenggambarkanservicenya)
spring.application.name=service-sample
spring.devtools.restart.enabled=false

# registry
eureka.client.serviceUrl.defaultZone=http://localhost:8090/eureka
# register to service registry? true/false
eureka.client.registerWithEureka=false
eureka.client.fetchRegistry=false
eureka.instance.hostname=${spring.application.name}
eureka.instance.preferIpAddress=true
# naming to registry
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# jdbc-datasource
spring.datasource.url=jdbc:postgresql://localhost:5432/Testing
spring.datasource.username=postgres
spring.datasource.password=admin
# create table when restart?
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.mvc.throw-exception-if-no-handler-found=true
#spring.resources.add-mappings=false
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration


# rabbitmq servers credentials for central config properties
spring.rabbitmq.host = 127.0.0.1
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest

# security
# gateway ip whitelist can't 'localhost','127.0.0.1'
gateway.ip=192.168.0.173
token.expiration_time=864000000
token.secret=mulaiajadulu

# logging
logging.file=${spring.application.name}.log
